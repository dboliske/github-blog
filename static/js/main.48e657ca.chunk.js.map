{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","prefersDarkMode","useMediaQuery","theme","React","useMemo","createTheme","palette","mode","primary","main","red","secondary","blue","ThemeProvider","AppBar","position","Toolbar","Typography","variant","component","sx","flexGrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAsCeA,MAhCf,WACE,IAAMC,EAAkBC,YAAc,gCAEhCC,EAAQC,IAAMC,SAClB,kBACEC,YAAY,CACVC,QAAS,CACPC,KAAMP,EAAkB,OAAS,QACjCQ,QAAS,CACPC,KAAMC,IAAI,MAEZC,UAAW,CACTF,KAAMG,IAAK,WAInB,CAACZ,IAGH,OACE,cAACa,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACE,cAACY,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMC,GAAI,CAACC,SAAU,GAAxD,kCCjBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.48e657ca.chunk.js","sourcesContent":["import React from 'react';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { AppBar, CssBaseline, Toolbar, Typography } from '@mui/material';\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\nimport { red, blue } from '@mui/material/colors';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: red[800]\n          },\n          secondary: {\n            main: blue[600]\n          }\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar position='fixed'>\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\n            Dylan Boliske\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}